# build with
#   cd contra/terraform
#   packer build ./packer.json.pkr.hcl
# check syntax with
#   packer validate ./packer.json.pkr.hcl

variable "aws_access_key" {
  type    = string
  default = "${env("AWS_ACCESS_KEY_ID")}"
}

variable "aws_secret_key" {
  type    = string
  default = "${env("AWS_SECRET_ACCESS_KEY")}"
}

variable "aws_session_token" {
  type    = string
  default = "${env("AWS_SESSION_TOKEN")}"
}

variable "region" {
  type    = string
  default = "${env("AWS_DEFAULT_REGION")}"
}

variable "branch" {
  type    = string
  default = "terraform"
}

# "timestamp" template function replacement
locals {
  timestamp = regex_replace(timestamp(), "[- TZ:]", "")
}

# source blocks are generated from your builders; a source can be referenced in
# build blocks. A build block runs provisioner and post-processors on a
# source. Read the documentation for source blocks here:
# https://www.packer.io/docs/from-1.5/blocks/source
source "amazon-ebs" "autogenerated_1" {
  access_key    = "${var.aws_access_key}"
  ami_name      = "contradb-web-and-db-${local.timestamp}"
  instance_type = "t2.micro"
  region        = "${var.region}"
  secret_key    = "${var.aws_secret_key}"
  source_ami_filter {
    most_recent = true
    filters = {
      name                = "ubuntu/images/*ubuntu-focal-20.04-amd64-server-*"
      root-device-type    = "ebs"
      virtualization-type = "hvm"
    }
    owners = ["099720109477"]
  }
  ssh_username = "ubuntu"
  token        = "${var.aws_session_token}"
}

# a build block invokes sources and runs provisioning steps on them. The
# documentation for build blocks can be found here:
# https://www.packer.io/docs/from-1.5/blocks/build
build {
  sources = ["source.amazon-ebs.autogenerated_1"]

  provisioner "file" {
    destination = "/tmp/packer.sh"
    source      = "./provisioning/packer.sh"
  }

  provisioner "file" {
    destination = "/home/ubuntu/master.key"
    source      = "../config/master.key"
  }

  provisioner "shell" {
    inline = [
      "sudo chown root.root /tmp/packer.sh",
      "sudo chmod u+x /tmp/packer.sh",
      "sudo /tmp/packer.sh ${var.branch}",
    ]
  }

  post-processor "manifest" {
    output = "packer-manifest.json"
    strip_path = true
  }
}
